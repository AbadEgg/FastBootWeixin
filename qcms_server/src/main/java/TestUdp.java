import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;

/**
 * Created by amanda.shan on 2018/1/31.
 */
public class TestUdp {

    private static byte[] bytes = new byte[]{0x51, 0x43, 0x4d, 0x53, (byte) 0xc3, 0x00, 0x02, 0x01, (byte) 0xc0, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0x80, 0x4e, (byte) 0xb0

            , 0x00, 0x00, 0x00, 0x70, 0x00, 0x61, 0x00, 0x74, 0x00, 0x69, 0x00, 0x65, 0x00, 0x6e, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x69, 0x00, 0x74, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x20, 0x00, 0x63, 0x00, 0x65, 0x00, 0x6e, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    public static void main(String[] args) throws IOException, InterruptedException {
        //1.创建socket服务
        DatagramSocket socket = new DatagramSocket(2527);//指定发送器端口

        //2.传输数据，并打包
        DatagramPacket packet = new DatagramPacket(bytes, bytes.length,
                InetAddress.getByName("192.168.1.255"), 2527);//指定应用程序端口

        revice(socket);

        while (true){
            //发送
            socket.send(packet);
            System.out.println("发送成功");

            Thread.sleep(1000);
        }

//        //关闭资源
//        socket.close();
//        System.out.println("over");
    }

    private static void revice(final DatagramSocket socket) throws IOException {

        new Thread(new Runnable() {
            public void run() {
                try {
                    byte[] buf = new byte[1024];

                    DatagramPacket dp = new DatagramPacket(buf, buf.length);

                    socket.receive(dp);

                    String ip = dp.getAddress().getHostAddress();
                    int port = dp.getPort();
                    String data = new String(dp.getData(),0,dp.getLength());
                    System.out.println(ip+":"+port+":"+data);
                } catch (SocketException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }).start();

    }
}
